module project
--------------------
data->
   retrofit(network framework)->
           LaunchesQuery: Query in Server with filter year range and query options
           LaunchNetworkEntity: entity from Network one launch
           LaunchResponse: accepts List LaunchNetworkEntity. Return in Api
           LaunchApi: Interface unit Query and Response.
   room(database framework)->
           AppDatabase: abstract class init Database. Get LaunchesDao
           LaunchesDao: entity for database table
           LaunchRoomEntity: interface foe working with database
  (DefaultLaunchRepository and  LaunchRemoteMediator unit retrofit data and room data)
   DefaultLaunchRepository: realization interface LaunchesRepository. Create pagingData with RoomEntity in Flow
   LaunchRemoteMediator: unit retrofit data and room database, synchronized paging and room query
////
di
////
domain
      ->
      Launch: interface with base parameters
      LaunchRepository: get flow with paging data. Data have filter "year"
////
ui->
  base->
      CustomFlowOperator: Emits Flow -> Flow List
      DefaultLoadStateAdapter: Adapter with Padding uses
      Event: Event with value in App is base on LiveData
      OnChange ? State. Have parameter value in constructor. Uses in Class [Selection.kt]
      --------------------------------------------------------------------------------------
  ->
  LauncherAdapter: Update UI state in Adapter item
  LaunchesItemCallback: Callback for second uses item in ListAdapter
  LaunchUiEntity: Represent data from [Launch] + selection state
  Selection: functional Selection in Item
  Year: look view filter year
////
  MainActivity
  MainActivityViewModel



